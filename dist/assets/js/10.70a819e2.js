(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{163:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"let和const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let和const","aria-hidden":"true"}},[t._v("#")]),t._v(" let和const")]),t._v(" "),a("h2",{attrs:{id:"es6为什么要新增let和const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6为什么要新增let和const","aria-hidden":"true"}},[t._v("#")]),t._v(" es6为什么要新增let和const")]),t._v(" "),a("p",[t._v("es5声明一个变量是使用"),a("code",[t._v("var")]),t._v("来声明的，es6引入"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("来声明变量，\n首先来看一下使用var声明会存在什么问题")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("fn")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a\n        cnosole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("fn")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("p",[t._v("上述代码，按照正常思维是会报错的，因为a没有声明就被使用了，但是打印出来的是"),a("code",[t._v("undefined")]),t._v("，\n这就是因为var声明的变量存在声明提升，就是会把"),a("code",[t._v("var a")]),t._v("提前。var声明的变量还会挂载在window对象下面（函数内声明的不会）")]),t._v(" "),a("p",[t._v("所以，var存在下面两个重大问题")]),t._v(" "),a("ol",[a("li",[t._v("变量声明提升，容易出现bug")]),t._v(" "),a("li",[t._v("一不小心就会污染全局变量，多人合作开发时很容易出问题")]),t._v(" "),a("li",[t._v("无法声明局部变量，es5声明局部变量只能使用立即执行函数")])]),t._v(" "),a("h2",{attrs:{id:"let和const-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let和const-2","aria-hidden":"true"}},[t._v("#")]),t._v(" let和const")]),t._v(" "),a("p",[t._v("先来看一段代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 会报错")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 会报错报错，const必须在声明的时候赋值")]),t._v("\n    "),a("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n    \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" \n    "),a("span",{attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 会报错")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token constant"}},[t._v("A")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("// 会报错")]),t._v("\n")])])]),a("p",[t._v("es6在"),a("code",[t._v("{}")]),t._v("中使用声明"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("就会让变量只在这个花括号内能够访问到")]),t._v(" "),a("p",[t._v("总结：")]),t._v(" "),a("ol",[a("li",[t._v("let和const都是用于声明一组括号内可以被访问的变量，也就是局部变量")]),t._v(" "),a("li",[t._v("let可以先声明，再赋值，const不可以")]),t._v(" "),a("li",[t._v("const声明的变量只有一次赋值机会，也就是其它编程语言里面有的常量")]),t._v(" "),a("li",[t._v("let和const在一组花括号内不能重复声明相同的变量")])]),t._v(" "),a("p",[t._v("所以，基本可以放弃使用"),a("code",[t._v("var")]),t._v("声明变量了")])])}],!1,null,null,null);o.options.__file="let.md";s.default=o.exports}}]);