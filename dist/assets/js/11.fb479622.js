(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{164:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("h2",{attrs:{id:"es6新增声明对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6新增声明对象的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" es6新增声明对象的方法")]),t._v(" "),a("p",[t._v("es6新增了一种方式"),a("code",[t._v("Object.create()")]),t._v("创建一个对象，可以通过指定第一个参数指定对象的原型")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 第一个参数指定新创建对象的原型对象，必须是一个 对象 或者 null")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// null值创建的对象原型将未定义，也就不存在对象的一些公用方法，比如toString()等方法")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 第二个参数表示对象拥有的属性描述，可以省略，省略的话值为 undefined")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("create")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// foo会成为所创建对象的数据属性")]),t._v("\n  foo"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 这个对象是对foo属性的描述")]),t._v("\n    writable"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n    configurable"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" \n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("es6推荐使用"),a("code",[t._v("Object.getPrototypeOf(object)")]),t._v("来获取对象的原型")])]),t._v(" "),a("h3",{attrs:{id:"属性描述符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性描述符","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性描述符")]),t._v(" "),a("p",[t._v("属性描述符可以使用六个值来描述")]),t._v(" "),a("ol",[a("li",[t._v("configurable: 为 true 时，属性描述符才可以被改变，即是否允许修改这六个属性描述符的值")]),t._v(" "),a("li",[t._v("writable: 为 true 时，属性值才可以背被赋值运算符"),a("code",[t._v("=")]),t._v("改变")]),t._v(" "),a("li",[t._v("enumberable: 为 true 时，对象的属性值才能被枚举（即遍历时是否会被遍历到）")]),t._v(" "),a("li",[t._v("value：属性的初始值（即定义的时候的值，描述符未给value值将会是undefined")]),t._v(" "),a("li",[t._v("get: 值为一个函数，定义了此函数，将会在获取属性值时执行此函数，函数返回值当做属性值")]),t._v(" "),a("li",[t._v("set: 值为一个函数，定义了此函数（需要定义一个参数，接受设置属性时候的属性值），将会在设置属性值时执行次函数，此函数负责修改设置的属性值")])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("获取一个对象的属性描述符时:")]),t._v(" "),a("p",[t._v("可以使用"),a("code",[t._v("Object.getOwnPropertyDescriptor(object, propertyName)")])])]),t._v(" "),a("h3",{attrs:{id:"动态键名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态键名","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态键名")]),t._v(" "),a("p",[t._v("es6可以使用变量来动态生成一个对象的键名")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Myname'")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Myname'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//  { Myname: 'Myname' }")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用symbol当做键名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用symbol当做键名","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用symbol当做键名")]),t._v(" "),a("p",[t._v("Symbol是一个唯一的字符串，所以是不会存在属性明冲突的")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prop "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prop1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'symbolKey'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop1"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'symbolKey1'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// { [Symbol()]: 'symbolKey', [Symbol()]: 'symbolKey1' }")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("symbol的属性键名可以通过"),a("code",[t._v("Object.getOwnPropertySymbols(object)")]),t._v("来获取，使用"),a("code",[t._v("Object.keys(object)")]),t._v("和"),a("code",[t._v("Object.getOwnPropertyNames(object)")]),t._v("是无法获取到的")])]),t._v(" "),a("h2",{attrs:{id:"对象的浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的浅拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象的浅拷贝")]),t._v(" "),a("p",[t._v("es6之前浅拷贝一个对象，需要使用一个for循环来实现，es6提供了"),a("code",[t._v("Object.assign()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 可以使用另外的一种语法")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// let obj2 = {...obj1}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// assign的第一个参数为目标对象，之后的参数是需要拷贝的对象，可以有多个拷贝对象")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 多对象重名属性后面将会覆盖前面的")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 多对象拷贝语法")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// let obj2 = {...obj1, ...obj3}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("assign")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// { a: 1, b: 2 } ")]),t._v("\n")])])])])}],!1,null,null,null);o.options.__file="object.md";s.default=o.exports}}]);