(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{155:function(s,a,t){s.exports=t.p+"assets/img/base.0d2070e8.png"},174:function(s,a,t){"use strict";t.r(a);var e=[function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql","aria-hidden":"true"}},[s._v("#")]),s._v(" mysql")]),s._v(" "),e("h2",{attrs:{id:"mysql的基础架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql的基础架构","aria-hidden":"true"}},[s._v("#")]),s._v(" mysql的基础架构")]),s._v(" "),e("p",[e("img",{attrs:{src:t(155),alt:"mysql基础架构图"}})]),s._v(" "),e("p",[s._v("mysql大体是分成：server层和存储引擎层两部分")]),s._v(" "),e("p",[s._v("server层涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数，所有跨存储引擎的功能都在这一层实现，\n比如存储过程、触发器、视图等")]),s._v(" "),e("p",[s._v("存储引擎层负责数据的存储和提取。架构模式是插件式的，支持InnoDB、MyISAM、Memory等多个存储引擎.")]),s._v(" "),e("p",[s._v("不同的存储引擎共用一个Server层.")]),s._v(" "),e("h2",{attrs:{id:"server层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#server层","aria-hidden":"true"}},[s._v("#")]),s._v(" server层")]),s._v(" "),e("p",[s._v("server层主要提供跨存储引擎的功能，包括")]),s._v(" "),e("ol",[e("li",[s._v("连接器")]),s._v(" "),e("li",[s._v("查询缓存")]),s._v(" "),e("li",[s._v("分析器")]),s._v(" "),e("li",[s._v("优化器")]),s._v(" "),e("li",[s._v("执行器")])]),s._v(" "),e("h3",{attrs:{id:"连接器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接器","aria-hidden":"true"}},[s._v("#")]),s._v(" 连接器")]),s._v(" "),e("p",[s._v("执行sql之前首先要和数据库服务器建立连接：")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[s._v("# $ip mysql服务器ip ")]),s._v("\n"),e("span",{attrs:{class:"token comment"}},[s._v("# $port mysql服务器端口号（默认值端口是3306）")]),s._v("\n"),e("span",{attrs:{class:"token comment"}},[s._v("# $user 登录mysql服务器的用户名")]),s._v("\nmysql -h"),e("span",{attrs:{class:"token variable"}},[s._v("$ip")]),s._v(" -P"),e("span",{attrs:{class:"token variable"}},[s._v("$port")]),s._v(" -u"),e("span",{attrs:{class:"token variable"}},[s._v("$user")]),s._v(" -p\n")])])]),e("p",[s._v("通过TCP连接后，连接器会进行身份认证(之前mysql客户端输入的用户名和密码)")]),s._v(" "),e("ol",[e("li",[s._v('如果用户名或者密码不对，会收到"Access denied for user"的错误，结束客户端的执行')]),s._v(" "),e("li",[s._v("如果用户名和密码验证通过，连接器会在权限表里面查出该用户拥有的权限，之后权限判断的逻辑都是依赖于此时获取的逻辑。意味着，之后对此用户有过权限的修改，都不影响此次连接（除非断开了，再重新连接）。")])]),s._v(" "),e("p",[s._v("连接完成后，没有后续动作，这个连接就会处于空闲状态，可以使用命令：show processlist;查看当前的连接列表\n空闲状态的连接太长时间（默认值是8小时）会自动断开，可以通过命令：show variables like 'wait_timeout'查看具体值")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{attrs:{class:"token comment"}},[s._v("# 查看连接列表")]),s._v("\nmysql"),e("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{attrs:{class:"token keyword"}},[s._v("show")]),s._v(" processlist"),e("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{attrs:{class:"token comment"}},[s._v("# 查看空闲连接自动断开的时间值")]),s._v("\nmysql"),e("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),e("span",{attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),e("span",{attrs:{class:"token string"}},[s._v("'wait_timeout'")]),s._v("\n")])])]),e("h4",{attrs:{id:"数据库的长连接和短连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库的长连接和短连接","aria-hidden":"true"}},[s._v("#")]),s._v(" 数据库的长连接和短连接")]),s._v(" "),e("p",[s._v("长连接：建立连接后，客户端持续有请求，一直使用同一个连接")]),s._v(" "),e("p",[s._v("短连接：执行完很少的查询就断开连接，后面有查询再重新建立连接")]),s._v(" "),e("p",[s._v("建立连接的过程比较复杂，使用中尽量减少建立连接的操作，即尽量使用长连接")]),s._v(" "),e("p",[s._v("但是全部使用长连接后，有些时候内存占用涨的特别快，这是因为MySQL在执行过程中临时使用的内存是管理在连接对象里面的。这些内存占用需要等链接断开才会释放。对于这个问题,可以考虑以下两种方案")]),s._v(" "),e("ol",[e("li",[s._v("定期断开长连接。使用一段时间，或者程序判断执行过一个占用内存大的查询后，断开连接，之后查询再进行重连")]),s._v(" "),e("li",[s._v("如果MySql版本大于等于5.7，可以在每次执行一个比较大的操作后, 通过执行mysql_reset_connection来重新初始化连接资源。这个过程不需要重新连接和重新做权限验证，但是会将连接恢复到刚刚创建连接时的状态。")])]),s._v(" "),e("h3",{attrs:{id:"查询缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询缓存","aria-hidden":"true"}},[s._v("#")]),s._v(" 查询缓存")]),s._v(" "),e("p",[s._v("建立连接之后，就可以执行SQL语句了。Mysql拿到一个查询请求，会先到查询缓存看看之前是否有执行过这条语句。之前执行的语句可能会以key-value对的形式直接缓存在内存中，key是查询的语句，value是查询的结果。如果语句不在查询缓存中，就会进行后面的阶段。执行完成后，执行结果会被存入查询缓存中。")]),s._v(" "),e("p",[s._v("但是大多数情况下建议不要使用查询缓存。")]),s._v(" "),e("p",[s._v("查询缓存的失效非常频繁，只要有对一个表的更新，这个表的所有的查询缓存都会被清空。对于更新压力大的数据库来说，查询缓存命中率非常低，除非是一张静态表。")]),s._v(" "),e("p",[s._v("Mysql提供了按需使用的方式，可以将数据库参数query_cache_type设置成DEMAND，默认不实用查询缓存，需要使用查询缓存的可以这样写sql，Mysql8.0版本将查询缓存整块功能删除掉了，之后的版本都都没有这个功能了。")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("mysql"),e("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{attrs:{class:"token keyword"}},[s._v("select")]),s._v(" SQL_CACHE "),e("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T "),e("span",{attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),e("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{attrs:{class:"token number"}},[s._v("10")]),e("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("h3",{attrs:{id:"分析器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分析器","aria-hidden":"true"}},[s._v("#")]),s._v(" 分析器")]),s._v(" "),e("p",[s._v("没有命中查询缓存，就会执行到分析器这边。分析器先会做词法分析，再进行语法分析。语法分析会检测是否存在语法错误。")]),s._v(" "),e("p",[s._v('如果语法有误，会收到"You have an error in your SQL syntax"的错误提醒，一般语法错误会出现在第一个出现错误的位置，提示中use near后面接着的就是语法出错的位置。')]),s._v(" "),e("h3",{attrs:{id:"优化器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化器","aria-hidden":"true"}},[s._v("#")]),s._v(" 优化器")]),s._v(" "),e("p",[s._v("优化器会在表中有多个索引的时候决定使用那个索引，或者在一个语句有多表关联的的时候，决定各个表的连接顺序。")]),s._v(" "),e("h3",{attrs:{id:"执行器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行器","aria-hidden":"true"}},[s._v("#")]),s._v(" 执行器")]),s._v(" "),e("p",[s._v("开始执行语句之前，会先判断对查询的表是否有执行查询的权限，如果没权限，会返回没有权限的错误。")]),s._v(" "),e("p",[s._v("如果有权限，会打开表继续执行，执行器会根据表的引擎定义，去使用这个引擎提供的接口查询数据")]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"存储引擎层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎层","aria-hidden":"true"}},[s._v("#")]),s._v(" 存储引擎层")]),s._v(" "),e("p",[s._v("这里负责数据的查询和存储。提供接口给server层使用")])])}],r=t(0),v=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);v.options.__file="README.md";a.default=v.exports}}]);