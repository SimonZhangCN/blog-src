(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{183:function(r,e,a){"use strict";a.r(e);var t=a(0),s=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var r=this,e=r.$createElement,a=r._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"server详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server详解","aria-hidden":"true"}},[r._v("#")]),r._v(" server详解")]),r._v(" "),a("h2",{attrs:{id:"swoole的进程模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoole的进程模型","aria-hidden":"true"}},[r._v("#")]),r._v(" swoole的进程模型")]),r._v(" "),a("p",[r._v("swoole启动一个Server后，会存在三类进程")]),r._v(" "),a("ol",[a("li",[r._v("Master")]),r._v(" "),a("li",[r._v("Manager")]),r._v(" "),a("li",[r._v("worker/taskWorker")])]),r._v(" "),a("h3",{attrs:{id:"master进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master进程","aria-hidden":"true"}},[r._v("#")]),r._v(" Master进程")]),r._v(" "),a("p",[r._v("是一个多线程程序，包括主线程和Reactor")]),r._v(" "),a("ol",[a("li",[r._v("主线程主要是Accept操作和信号处理")]),r._v(" "),a("li",[r._v("Reactor线程负责处理TCP连接、网络IO和收发数据等")])]),r._v(" "),a("h3",{attrs:{id:"manager进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manager进程","aria-hidden":"true"}},[r._v("#")]),r._v(" Manager进程")]),r._v(" "),a("p",[r._v("专门负责worker/task进程的fork操作和管理, manager的任务本来可以由master进程来负责，对于多线程的Master进程而言，想要多Worker进程就必须fork操作，但是fork操作是不安全的. 所以Manager进程就是为了保证Master进程的稳定.")]),r._v(" "),a("p",[r._v("通常，worker进程被误杀或者由于程序的原因会异常退出，Manager进程为了保证服务的稳定性，会重新拉起新的worker进程")]),r._v(" "),a("h3",{attrs:{id:"worker-taskworker进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#worker-taskworker进程","aria-hidden":"true"}},[r._v("#")]),r._v(" worker/taskWorker进程")]),r._v(" "),a("p",[r._v("worker进程：负责具体的业务代码")]),r._v(" "),a("p",[r._v("task进程：负责处理时间比较久的任务")]),r._v(" "),a("h2",{attrs:{id:"对象生命周期和内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象生命周期和内存管理","aria-hidden":"true"}},[r._v("#")]),r._v(" 对象生命周期和内存管理")])])}],!1,null,null,null);s.options.__file="server.md";e.default=s.exports}}]);